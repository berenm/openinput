--------------------------------------------------------------------
-- Notes on the internal API
--------------------------------------------------------------------

* Ownership of event variables:

queue_add() will COPY the given event into the queue, ie.  you can
throw the memory away after the call.

queue_peep() will COPY the event into the user's pointer, ie. you
must allocate space for the event(s) before calling the functon.

--------------------------------------------------------------------

* Boot process:

The following describes the basic flow in the boot process.

oi_init()
	// Stage 1: Initialize the queue
	oi_running = FALSE;
	queue_init();

	// Stage 2: Bootstrap devices
	device_bootstrap()
		bootstrap->avail(); ***
		bootstrap->create(); ***
		queue_add(oi_discovery_event);

	// State 3: Initialize devices
	device_init();
		device->init(); ***

	// Stage 4: Initialize state managers
	appstate_init();
	keyboard_init();
	mouse_init();
	action_init();

	// Stage 5: Enter running state
	oi_running = TRUE;

You, as a device driver hacker, needs only implement the functions
marked by ***. All other steps are handled automatically by the
bootstrap process. Also, in order for device_bootstrap() to use your
driver, you'll need to hook into the boostrap-table - please see
the 'bootstrap.h' file for information (it's dead simple!).

Important: Do NOT dispatch events before the oi_running flag has
been set! Devices may (if multithreaded) begin to run before the
state managers have initialized. You can, however, use the queue
if you really have to (like sending discovery events).

--------------------------------------------------------------------

* Required and optional device functions

The following functions (function pointers) MUST be implemented:
  init()
  destroy()
  process()
  
The following functions are OPTIONAL, and should be set to NULL
if they are not implemented:
  grab()
  hide()
  warp()
  winsize()
  reset()

--------------------------------------------------------------------

* Coding style

Indentation is four (4) spaces. No tabs!
Don't forget to write Doxygen function documentation!

--------------------------------------------------------------------
